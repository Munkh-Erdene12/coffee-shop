// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
model user {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  email               String
  password            String
  role                String    @default("user")
  product             product[]
  comment             comment[]
  img                 String?
  verifyEmail         String?
  resetPasswordToken  String?
  resetPasswordExpire DateTime?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}

model category {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  product product[]
  totalProduct Int?
  totalPrice Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model product {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  price       String
  description String?
  img         String
  categoryID  String @db.ObjectId
  type        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  url         String
  userID      String? @db.ObjectId
  category    category @relation(fields: [categoryID], references: [id])
  user        user?    @relation(fields: [userID], references: [id])
}

model slider {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  subtitle   String?
  buttonText String?
  image      String?
  updatedAt  DateTime @updatedAt
  createdAt  DateTime @default(now())
}

model blog {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  img         Json
  description String
  updatedAt   DateTime  @updatedAt
  createdAt   DateTime  @default(now())
  comment     comment[]
}

model comment {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  userID    String @db.ObjectId
  blogID    String @db.ObjectId
  user      user     @relation(fields: [userID], references: [id])
  blog      blog     @relation(fields: [blogID], references: [id])
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model totolSum {
 id String @id @default(auto()) @map("_id") @db.ObjectId
  name      Int
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model bookTable {
id String @id @default(auto()) @map("_id") @db.ObjectId
 person    String
  date      DateTime
  time      String
  phone     String
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model order {
 id String @id @default(auto()) @map("_id") @db.ObjectId

}