  // const fileInputRef = React.useRef<HTMLInputElement | null>(null);
  const [images, setImages]: [
    { name: any; url: string; size: number }[],
    React.Dispatch<
      React.SetStateAction<{ name: any; url: string; size: number }[]>
    >
  ] = React.useState([] as { name: any; url: string; size: number }[]);

    const onFileSelect = (event: any) => {
    const files = event.target.files;
    if (files.length === 0) return;
    for (let i = 0; i < files.length; i++) {
      if (files[i].type.split("/")[0] !== "image") continue;
      if (!images.some((e) => e.name === files[i].name)) {
        setImages((prev) => [
          ...prev,
          {
            name: files[i].name,
            url: URL.createObjectURL(files[i]),
            size: files[i].size,
          },
        ]);
      }
    }
  };



"use client";
import React, { Component } from "react";
import {
  Inject,
  ScheduleComponent,
  Day,
  Week,
  WorkWeek,
  Month,
  Agenda,
  EventSettingsModel,
} from "@syncfusion/ej2-react-schedule";
import "@syncfusion/ej2-react-schedule/styles/material.css";

import AdminMainDesign from "@/components/admin/AdminMainDesign"; //#endregion
import PublisherContainer from "@/components/publisher/PublisherContainer";
export default class page extends Component {
  private localDate: EventSettingsModel = {
    dataSource: [
      {
        EndTime: new Date(2023, 0, 11, 6, 30),
        StartTime: new Date(2023, 0, 11, 4, 0),
      },
    ],
  };
  render() {
    return (
      <AdminMainDesign>
        <PublisherContainer>
          <ScheduleComponent
            currentView="Month"
            selectedDate={new Date()}
            eventSettings={this.localDate}
          >
            <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />
          </ScheduleComponent>
        </PublisherContainer>
      </AdminMainDesign>
    );
  }
}
